:root {
  --color-purple: #6264ff;
  --color-red: #AE3532;
  --color-sidebar: #1F1F1F;
  --color-placeholder-text: #757575;
  --color-settings-explaination-text: #757575;
  --color-grey-darkest: #242424;
  --color-grey-darker: #2b2b2b;
  --color-grey-dark: #2f2f2f;
  --color-grey: #363636;
  --color-grey-light: #555555;
  --color-grey-lighter: #dddddd;
  --color-grey-lightest: white;

  --width-main-canvas: 440px;
  --width-sidebar: 
}

* {
  font-size: .99em;
  font-family: Verdana, sans-serif;
  -webkit-font-smoothing: antialiased;
  color: var(--color-grey-lighter);

  /* disable selection */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  outline: 0;
}

body {
  margin: 0px;
}

/* creates space at the top of the window that allows the app window to be moved */
header {
  -webkit-app-region: drag;
  height: 32px;
  position: fixed;
  top: 0px;
  right: 0px;
  width: 100%;
  z-index: 1000;
  background-image: linear-gradient(to right, var(--color-grey-darkest) 480px, var(--color-sidebar) 480px);
}

img {
  -webkit-user-drag: none; /* For Chrome and Safari */
}

input[type="checkbox"],
input[type="checkbox"]:checked:hover,
input[type="radio"],
input[type="radio"]:checked:hover
{
  accent-color: var(--color-purple);
}

/* for radio buttons */
fieldset {
  margin-top: 14px;
  border: 1px solid var(--color-grey-light);
}
fieldset legend {
  font-size: .7em;
  text-transform: uppercase;
  color: var(--color-grey-light);
  padding-left: 6px;
  padding-right: 6px;
}

/* Hides the scrollbar */
::-webkit-scrollbar {
  display: none;
}

/* Add margins and space for the header */
.app-container {
  display: flex;
  padding: 32px 20px 0px 20px;
  height: calc(100vh - 32px);;
}

.vertical-container {
  display: flex;
  flex-direction: column;
}

.page-header {
  display: flex;
  font-size: 1.7em;
  padding-top: 2px;
  background-color: var(--color-grey-darkest);
  height: 60px;
  align-items: flex-start;

  /* the below allows the input box to be always on top */
  width: var(--width-main-canvas);
  position: fixed;
  z-index: 900;
}

.page-title {
  flex: 1;
}

.page-close {
  margin-top: -4px;
  margin-right: 8px;
}

/* for the settings and the task name on the sidebar */
.title {
  margin: 0px 10px 20px 0px;
  outline: 0px solid transparent;
  font-weight: bold;
  display: flex;
  flex-grow: 1;
}

.shortcut {
  color: var(--color-grey-light);
}

.sidebar {
  position: fixed;
  top: 0px;
  left: 480px;
  width: 300px;
  height: 100vh;
  background: var(--color-sidebar);
}

.sidebar-icon-container {
  width: 100%;
  height: 100vh;
  justify-content: center;
  vertical-align: middle;
  display: flex;
}

.heading {
  font-size: .7em;
  text-transform: uppercase;
  color: var(--color-grey-light);
  padding-top: 15px;
  margin-bottom: 5px;
}

/* To set the bottom border of a <div> tag to be smaller than the full width of
the <div>, which I want to do b/c I'm using rounded edges (i.e., a border radius),
I will use a CSS pseudo-element (in this case, the .task::after element). */
.task {
  position: relative; /* Needed for positioning the pseudo-element */
  display: flex;
  color: var(color-grey-lighter);
  font-weight: lighter;
  align-items: center;
  padding: 0px 10px 0px 10px;
  border-radius: 5px;
}

.task::after {
  content: ""; /* Required for pseudo-elements */
  display: block; /* Make it a block element */
  width: 95%; /* Set the desired width of the border */
  height: 1px; /* Set the height of the border */
  background-color: var(--color-grey-dark); /* Border color */
  position: absolute; /* Position it absolutely */
  left: 50%; /* Center it horizontally */
  bottom: 0; /* Position at the bottom */
  transform: translateX(-50%); /* Adjust for centering */
}

/* When an element with the .task-title class gains focus, change the background
of the parent .task element */
.task:has(> .task-title:focus) {
  background-color: var(--color-grey);
}

.task-list {
  width: var(--width-main-canvas);
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.task-title {
  flex: 1;
  padding: 13px;
  outline: 0px solid transparent;

  white-space: nowrap;       /* Prevent line breaks */
  overflow: hidden;          /* Hide overflowing text */
  text-overflow: ellipsis;   /* Add ellipsis at the end */
}

.task-title-completed {
  color: var(--color-grey-light);
}

.empty {
  border-radius: 5px;
  color: var(--color-grey-light);
  height: 44px;
  width: 100%;
  text-align: center;
  line-height: 44px;
  background-color: var(--color-grey-darker);
}